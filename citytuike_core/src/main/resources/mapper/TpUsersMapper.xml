<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间应该是对应接口的包名+接口名 -->
<mapper namespace="com.citytuike.mapper.TpUsersMapper">
	<resultMap id="TpRegion" type="com.citytuike.model.TpRegion" >
		<result column="id" property="id" />
	</resultMap>
	<resultMap id="TpUserWallet" type="com.citytuike.model.TpUserWallet" >
		<result column="id" property="id" />
	</resultMap>
	<resultMap id="TpUserAddress" type="com.citytuike.model.TpUserAddress" >
		<result column="address_id" property="address_id" />
	</resultMap>
	<resultMap id="TpSysMessage" type="com.citytuike.model.TpSysMessage" >
		<result column="id" property="id" />
	</resultMap>
	<resultMap id="TpSmsLog" type="com.citytuike.model.TpSmsLog" >
		<result column="id" property="id" />
	</resultMap>
	<resultMap id="TpUsers" type="com.citytuike.model.TpUsers" >
		<result column="user_id" property="user_id" />
		<result column="email" property="email" />
		<result column="password" property="password" />
		<result column="paypwd" property="paypwd" />
		<result column="sex" property="sex" />
		<result column="birthday" property="birthday" />
		<result column="user_money" property="user_money" />
		<result column="frozen_money" property="frozen_money" />
		<result column="distribut_money" property="distribut_money" />
		<result column="underling_number" property="underling_number" />
		<result column="pay_points" property="pay_points" />
		<result column="address_id" property="address_id" />
		<result column="reg_time" property="reg_time" />
		<result column="last_login" property="last_login" />
		<result column="last_ip" property="last_ip" />
		<result column="qq" property="qq" />
		<result column="mobile" property="mobile" />
		<result column="mobile_validated" property="mobile_validated" />
		<result column="oauth" property="oauth" />
		<result column="openid" property="openid" />
		<result column="unionid" property="unionid" />
		<result column="head_pic" property="head_pic" />
		<result column="province" property="province" />
		<result column="city" property="city" />
		<result column="district" property="district" />
		<result column="email_validated" property="email_validated" />
		<result column="nickname" property="nickname" />
		<result column="level" property="level" />
		<result column="discount" property="discount" />
		<result column="total_amount" property="total_amount" />
		<result column="paper_number" property="paper_number"/>
		<result column="paper_number_allowance" property="paper_number_allowance"/>
		<result column="is_lock" property="is_lock" />
		<result column="is_distribut" property="is_distribut" />
		<result column="first_leader" property="first_leader" />
		<result column="second_leader" property="second_leader" />
		<result column="token" property="token" />
		<result column="message_mask" property="message_mask" />
		<result column="push_id" property="push_id" />
		<result column="distribut_level" property="distribut_level" />
		<result column="is_vip" property="is_vip" />
		<result column="invite_code" property="invite_code" />
		<result column="relation" property="relation" />
		<result column="parent_id" property="parent_id" />
		<result column="wechat" property="wechat" />
		<result column="wechat_qrcode" property="wechat_qrcode" />
		<result column="set_pass" property="set_pass" />
		<result column="im_id" property="im_id" />
		<result column="im_pwd" property="im_pwd" />
		<result column="is_top" property="is_top" />
		<result column="voice_notice" property="voice_notice" />
		<result column="backimg" property="backimg" />
	</resultMap>
	
	<sql id="Base_Column_List">
			t.user_id,
			t.email,
			t.password,
			t.paypwd,
			t.sex,
			t.birthday,
			t.user_money,
			t.frozen_money,
            t.distribut_money,
			t.underling_number,
			t.pay_points,
			t.address_id,
			t.reg_time,
			t.last_login,
			t.last_ip,
			t.qq,
			t.mobile,
			t.mobile_validated,
			t.oauth,
			t.openid,
			t.unionid,
			t.head_pic,
			t.province,
			t.city,
			t.district,
			t.email_validated,
			t.nickname,
			t.level,
			t.discount,
			t.total_amount,
			t.is_lock,
			t.is_distribut,
			t.first_leader,
			t.second_leader,
			t.second_leader,
			t.token,
			t.message_mask,
			t.push_id,
			t.distribut_level,
			t.is_vip,
			t.invite_code,
			t.relation,
			t.sale_number,
			t.parent_id,
			t.wechat,
			t.wechat_qrcode,
			t.set_pass,
			t.im_id,
			t.im_pwd
	</sql>
	
	<!--登陆查询 -->
	<select id="findOneByLogo" resultType="TpUsers">
		select <include refid="Base_Column_List" /> 
		from tp_users as t where t.mobile=#{username} and t.password=#{password}
	</select>
	<select id="findOneByOpenId" resultType="TpUsers">
		select *
		from tp_users as t where t.openid=#{openid}
	</select>
	<select id="findOneByMobileAndCode" resultType="TpSmsLog">
		select <include refid="Base_Column_List" />
		from tp_sms_log as t where t.mobile=#{username} and t.code=#{mobileCode}
	</select>
	<select id="findOneByUserId" resultType="TpUsers">
		select <include refid="Base_Column_List" />
		from tp_users as t where t.user_id=#{user_id}
	</select>
	<select id="findOneByImId" resultType="TpUsers">
		select <include refid="Base_Column_List" />
		from tp_users as t where t.im_id=#{im_id}
	</select>
	<select id="findOneByMobile" resultType="TpUsers">
		select <include refid="Base_Column_List" />
		from tp_users as t where t.mobile=#{username}
	</select>
	<select id="findOneByInvite" resultType="TpUsers">
		select <include refid="Base_Column_List" />
		from tp_users as t where t.invite_code=#{invite}
	</select>
	<select id="findAllByUserParentId" resultMap="TpUsers">
		select * from tp_users as t where t.parent_id=#{parent_id} and t.level > 0
	</select>
	<select id="findAddressByUserId" resultMap="TpUserAddress">
		select * from tp_user_address as t where t.user_id=#{user_id}
	</select>
	<select id="findIsDefaultAll" resultMap="TpUserAddress">
		select * from tp_user_address as t where t.user_id=#{user_id} and t.is_default=1
	</select>
	<select id="findUserAddresById" resultType="TpUserAddress">
		select * from tp_user_address as t where t.user_id=#{user_id}
	</select>
	
	<select id="findAllByLevel" resultMap="TpRegion">
		select * from tp_region as t where t.level=#{id}
	</select>
	<select id="findRegionById" resultMap="TpRegion">s
		select * from tp_region as t where t.id=#{regions_id}
	</select>
	<select id="findRegionByName" resultMap="TpRegion">
		select * from tp_region as t where t.name=#{launch_address}
	</select>
	<select id="findRegionByParentId" resultMap="TpRegion">
		select * from tp_region as t where t.parent_id=#{id}
	</select>
	<select id="findWalletByUserId" resultMap="TpUserWallet">
		select * from tp_user_wallet as t where t.user_id=#{user_id}
	</select>

	<!--token查询 -->
	<select id="findOneByToken" resultType="TpUsers">
		select <include refid="Base_Column_List" /> 
		from tp_users as t where t.token=#{token}
	</select>
	<insert id="save" parameterType="com.citytuike.model.TpUsers" useGeneratedKeys="true" keyProperty="user_id" >
		INSERT INTO tp_users (
			email,
			password,
			paypwd,
			sex,
			birthday,
			user_money,
			frozen_money,
            distribut_money,
			underling_number,
			pay_points,
			address_id,
			reg_time,
			last_login,
			last_ip,
			qq,
			mobile,
			mobile_validated,
			oauth,
			openid,
			unionid,
			head_pic,
			province,
			city,
			district,
			email_validated,
			nickname,
			level,
			discount,
			total_amount,
			is_lock,
			is_distribut,
			first_leader,
			second_leader,
			third_leader,
			token,
			message_mask,
			push_id,
			distribut_level,
			is_vip,
			invite_code,
			relation,
			sale_number,
			parent_id,
			wechat,
			wechat_qrcode,
			set_pass,
			im_id,
			im_pwd
		) VALUES (
			#{email},
			#{password},
			#{paypwd},
			#{sex},
			#{birthday},
			#{user_money},
			#{frozen_money},
            #{distribut_money},
			#{underling_number},
			#{pay_points},
			#{address_id},
			#{reg_time},
			#{last_login},
			#{last_ip},
			#{qq},
			#{mobile},
			#{mobile_validated},
			#{oauth},
			#{openid},
			#{unionid},
			#{head_pic},
			#{province},
			#{city},
			#{district},
			#{email_validated},
			#{nickname},
			#{level},
			#{discount},
			#{total_amount},
			#{is_lock},
			#{is_distribut},
			#{first_leader},
			#{second_leader},
			#{third_leader},
			#{token},
			#{message_mask},
			#{push_id},
			#{distribut_level},
			#{is_vip},
			#{invite_code},
			#{relation},
			#{sale_number},
			#{parent_id},
			#{wechat},
			#{wechat_qrcode},
			#{set_pass},
			#{im_id},
			#{im_pwd}
		);
		<!--<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
			/*SELECT @@IDENTITY AS id*/
		</selectKey>-->
	</insert>
	<insert id="insertUserAddress" parameterType="com.citytuike.model.TpUserAddress" useGeneratedKeys="true" keyProperty="address_id" >
		INSERT INTO tp_user_address (
			user_id,
			consignee,
			email,
			country,
			province,
			city,
			district,
            twon,
			address,
			zipcode,
			mobile,
			is_default
		) VALUES (
			#{user_id},
			#{consignee},
			#{email},
			#{country},
			#{province},
			#{city},
			#{district},
            #{twon},
			#{address},
			#{zipcode},
			#{mobile},
			#{is_default}
		);
	</insert>
	<insert id="insertApplicationforBusinessCooperation" parameterType="com.citytuike.model.TpApplicationForBusinessCooperation" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO tp_application_for_business_cooperation (
			user_id,
			name,
			email,
			province,
			city,
			district,
			type,
            bank_name,
			ways_of_cooperation,
			company,
			day_number,
			details,
			files,
			mobile,
			reason,
			read,
			reply_mess
		) VALUES (
			#{user_id},
			#{name},
			#{email},
			#{province},
			#{city},
			#{district},
			#{type},
            #{bank_name},
			#{ways_of_cooperation},
			#{company},
			#{day_number},
			#{details},
			#{files},
			#{mobile},
			#{reason},
			#{read},
			#{reply_mess}
		);
	</insert>
	<insert id="insertUserUpLog" parameterType="com.citytuike.model.TpUserUpLog" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO tp_user_up_log (
			user_id,
			level,
			add_time
		) VALUES (
			#{user_id},
			#{level},
			#{add_time}
		);
	</insert>
	<insert id="insertUserFinance" parameterType="com.citytuike.model.TpUserFinance" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO tp_user_finance (
			user_id,
			change_type,
			amount,
			user_balance,
			biz_sign,
			biz_sn,
			remark,
			created_at
		) VALUES (
			#{user_id},
			#{level},
			#{add_time}
		);
	</insert>
	<update id="updateBytokenIn" parameterType="com.citytuike.model.TpUsers" >
		UPDATE tp_users
		SET 
			<if test="token != null">
				token=#{token}
			</if>
		WHERE user_id = #{user_id}
	</update>
	<update id="updateUserParent" parameterType="com.citytuike.model.TpUsers" >
		UPDATE tp_users
		SET
				parent_id=#{parent_id},
				relation=#{relation}
		WHERE user_id = #{user_id}
	</update>
	<update id="updateBytokenOut" parameterType="com.citytuike.model.TpUsers" >
		UPDATE tp_users
		SET 
			<if test="token != null">
				token=#{token}
			</if>
		WHERE user_id = #{user_id}
	</update>
	<update id="updateAddressToDefault" parameterType="com.citytuike.model.TpUserAddress" >
		UPDATE tp_users_address
		SET 
				is_default=#{i}
		WHERE address_id = #{id}
	</update>
	<update id="updateUserLevel" parameterType="com.citytuike.model.TpUsers" >
		UPDATE tp_users
		SET
				level=#{level}
		WHERE user_id=#{user_id}
	</update>
	<update id="updateUserFrozenMoney" parameterType="com.citytuike.model.TpUsers" >
		UPDATE tp_users
		SET
				frozen_money=#{frozen_money}
		WHERE user_id=#{user_id}
	</update>
	<update id="updateUserWalletBalance" parameterType="com.citytuike.model.TpUserWallet" >
		UPDATE tp_user_wallet
		SET
				balance=#{balance}.
				updated_at=#{updated_at}
		WHERE id=#{id}
	</update>
	<update id="updateUserAddress" parameterType="com.citytuike.model.TpUserAddress" >
		UPDATE tp_user_address
		SET 
			<if test="consignee != null">
				consignee=#{consignee},
			</if>
			<if test="email != null">
				 email=#{email},
			</if>
			<if test="country != null">
				 country=#{country},
			</if>
			<if test="province != null">
				 province=#{province},
			</if>
			<if test="city != null">
				 city=#{city},
			</if>
			<if test="district != null">
				 district=#{district},
			</if>
			<if test="twon != null">
				 twon=#{twon},
			</if>
			<if test="address != null">
				address=#{address},
			</if>
			<if test="zipcode != null">
				zipcode=#{zipcode},
			</if>
			<if test="mobile != null">
				 mobile=#{mobile},
			</if>
			<if test="is_default != null">
				 is_default=#{is_default}
			</if>
		WHERE address_id = #{address_id}
	</update>
	<select id="selectCountMoney" resultType="bigdecimal">
		select user_money from tp_users where user_id=#{user_id}
	</select>
	<select id="findOneBySysIdAndUserId" resultType="com.citytuike.model.TpSysMessageUser">
		select * from tp_sys_message_user where user_id=#{user_id} and sys_msg_id=#{id}
	</select>
	<select id="findPlatMsgByFlagd" resultType="com.citytuike.model.TpPlateMsg">
		select * from tp_plate_msg where flag=#{flag}
	</select>
	<select id="selectRegTime" resultType="int">
		select reg_time FROM  tp_users WHERE user_id = #{user_id}
	</select>
	<select id="selectParentId" resultMap="TpUsers">
		select * FROM  tp_users WHERE parent_id = #{user_id}
	</select>
	<select id="findAllSysMessage" resultMap="TpSysMessage">
		select * FROM  tp_sys_message;
	</select>
	<!-- 分页SQL语句 -->
	<select id="selectByPage" resultType="TpUsers">
		select *  from tp_users where parent_id = #{user_id} limit #{startPos},#{pageSize}
	</select>
	<select id="countByParentId" resultType="int">
		SELECT count(1)
		FROM tp_users where parent_id=#{user_id} and  level=0
	</select>
	<select id="countByParentIdDay" resultType="int">
		SELECT count(1)
		FROM tp_users where parent_id=#{user_id} and  level=0 and (reg_time &gt;= #{startTime} and  reg_time &lt;= #{endTime})
	</select>
	<update id="updateUserInfo">
		update tp_users
		set email = #{email,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=BIT},
		birthday = #{birthday,jdbcType=INTEGER},
		qq = #{qq,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		head_pic = #{head_pic,jdbcType=VARCHAR},
		province = #{province,jdbcType=INTEGER},
		city = #{city,jdbcType=INTEGER},
		district = #{district,jdbcType=INTEGER},
		nickname = #{nickname,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR},
		wechat = #{wechat,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR},
		wechat_qrcode = #{wechat_qrcode,jdbcType=VARCHAR}
		where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	<delete id="deleteAddress">
		delete from tp_user_address where user_id = #{user_id} and address_id = #{id}
	</delete>
	<update id="updateUserAndMobile">
		update tp_users
		set email = #{email,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=BIT},
		birthday = #{birthday,jdbcType=INTEGER},
		qq = #{qq,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		head_pic = #{head_pic,jdbcType=VARCHAR},
		province = #{province,jdbcType=INTEGER},
		city = #{city,jdbcType=INTEGER},
		district = #{district,jdbcType=INTEGER},
		nickname = #{nickname,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR},
		wechat = #{wechat,jdbcType=VARCHAR},
		token = #{token,jdbcType=VARCHAR},
		wechat_qrcode = #{wechat_qrcode,jdbcType=VARCHAR}
		where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	<select id="selectFrozen" resultType="bigdecimal">
		select frozen_money from tp_users where user_id = #{user_id}
	</select>
	<update id="updateUserMoney" >
		update tp_users set user_money = #{newUserMoney} where user_id = #{user_id}
	</update>
	<select id="getInviteCodeUserInfo" resultType="TpUsers">
		select * from tp_users where invite_code = #{invite_code}
	</select>
	<select id="selectAddrass" resultType="string">
		select tp.name from tp_user_address t LEFT JOIN tp_region tp on t.province = tp.id where user_id = #{user_id} and is_default = 1
	</select>
	<select id="selectCity" resultType="string">
		select tp.name from tp_user_address t LEFT JOIN tp_region tp on t.city = tp.id where user_id = #{user_id} and is_default = 1
	</select>
	<select id="selectDistrict" resultType="string">
		select tp.name from tp_user_address t LEFT JOIN tp_region tp on t.district = tp.id where user_id = #{user_id} and is_default = 1
	</select>
	<select id="selectMobile" resultType="int">
		select count(mobile) from tp_users where user_id =#{user_id}
	</select>
	<update id="updatePwd">
		update tp_users set password = #{new_password} where user_id = #{user_id}
	</update>
	<select id="getSumMoneyDevice" resultType="bigdecimal">
		select distribut_money from tp_users where user_id = #{user_id}
	</select>
	<select id="UserMoney" resultType="TpUsers">
		select * from tp_users where user_id = #{user_id}
	</select>
	<select id="incomeCount" resultType="TpUsers">
		select sale_number from tp_users where user_id = #{user_id}
	</select>
	<select id="selectUserByMobile" resultType="TpUsers">
		select * from tp_users where mobile=#{mobile}
	</select>
	<select id="getUserNameByMobile" resultType="TpUsers">
		select * from tp_users where mobile= #{mobile}
	</select>
	<select id="getInviteCode" resultType="TpUsers">
		select * from tp_users where user_id = #{user_id}
	</select>
	<select id="getPaperNum" resultType="TpUsers">
		SELECT paper_number from tp_users where user_id = #{user_id}
	</select>
	<update id="update">
		update tp_users
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      paypwd = #{paypwd,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=INTEGER},
      user_money = #{user_money,jdbcType=DECIMAL},
      frozen_money = #{frozen_money,jdbcType=DECIMAL},
      distribut_money = #{distribut_money,jdbcType=DECIMAL},
      underling_number = #{underling_number,jdbcType=INTEGER},
      pay_points = #{pay_points,jdbcType=INTEGER},
      address_id = #{address_id,jdbcType=INTEGER},
      reg_time = #{reg_time,jdbcType=INTEGER},
      last_login = #{last_login,jdbcType=INTEGER},
      last_ip = #{last_ip,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      mobile_validated = #{mobile_validated,jdbcType=TINYINT},
      oauth = #{oauth,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      unionid = #{unionid,jdbcType=VARCHAR},
      head_pic = #{head_pic,jdbcType=VARCHAR},
      province = #{province,jdbcType=INTEGER},
      city = #{city,jdbcType=INTEGER},
      district = #{district,jdbcType=INTEGER},
      email_validated = #{email_validated,jdbcType=BIT},
      nickname = #{nickname,jdbcType=VARCHAR},
      level = #{level,jdbcType=BIT},
      discount = #{discount,jdbcType=DECIMAL},
      total_amount = #{total_amount,jdbcType=DECIMAL},
      is_lock = #{is_lock,jdbcType=BIT},
      is_distribut = #{is_distribut,jdbcType=BIT},
      first_leader = #{first_leader,jdbcType=INTEGER},
      second_leader = #{second_leader,jdbcType=INTEGER},
      third_leader = #{third_leader,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      message_mask = #{message_mask,jdbcType=BIT},
      push_id = #{push_id,jdbcType=VARCHAR},
      distribut_level = #{distribut_level,jdbcType=TINYINT},
      is_vip = #{is_vip,jdbcType=BIT},
      invite_code = #{invite_code,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR},
      sale_number = #{sale_number,jdbcType=INTEGER},
      parent_id = #{parent_id,jdbcType=INTEGER},
      wechat = #{wechat,jdbcType=VARCHAR},
      wechat_qrcode = #{wechat_qrcode,jdbcType=VARCHAR},
      set_pass = #{set_pass,jdbcType=BIT},
      im_id = #{im_id,jdbcType=VARCHAR},
      im_pwd = #{im_pwd,jdbcType=VARCHAR},
      paper_number = #{paper_number,jdbcType=INTEGER},
      paper_number_allowance = paper_number_allowance -1
    where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	<select id="getToken" resultType="TpUsers">
		SELECT * FROM  tp_users where token = #{token}
	</select>
	<select id="income" resultType="TpUsers">
		select * from tp_user ORDER BY distribut_money desc limit 30
	</select>
	<select id="sale" resultType="TpUsers">
		select * from tp_user ORDER BY sale_number desc limit 30
	</select>
	<select id="getUserByInviteCode" resultType="TpUsers">
		select * from tp_users where invite_code = #{invite_code}
	</select>
	<select id="getUserInfo" resultType="TpUsers">
		select * from tp_users where user_id = #{user_id}
	</select>
	<update id="updatePayPwd">
		update tp_users set paypwd = #{password} where user_id = #{user_id}
	</update>
	<select id="getMobile" resultType="TpUsers">
		select * from tp_users where mobile = #{mobile}
	</select>
	<update id="updatePassword">
		update tp_users set password = #{confirm_password} where user_id = #{user_id}
	</update>
	<update id="updateSetPass">
		update tp_users set set_pass = 1 where user_id = #{user_id}
	</update>
	<update id="updataUSerByBackimg">
		update tp_users set backimg = #{backimg} where user_id = #{user_id}
	</update>
	<select id="selectLevel" resultType="TpUsers">
		SELECT * FROM  tp_users
	</select>
	<sql id="base_where">
		<where>
			<if test="type == 1">
				and level > 1
			</if>
			<if test="type == 2" >
				and level = 1
			</if>
		</where>
	</sql>
	<select id="selectPaperCount" resultType="TpUsers">
		select mobile,paper_number_allowance,paper_number from tp_users where user_id = #{user_id}
	</select>
	<select id="selectToUser" resultType="TpUsers">
	select * from tp_users where invite_code = #{invite_code}
	</select>
	<update id="updateNumber">
		update tp_users set paper_number_allowance = paper_number_allowance - #{number} where user_id = #{user_id}
	</update>
	<select id="getToUser" resultType="TpUsers">
		SELECT * from tp_users where user_id = #{to_user_id}
	</select>
	<select id="getFriendsName" resultType="TpUsers">
		SELECT * from tp_users where user_id = #{from_user_id}
	</select>
	<select id="selectFromUser" resultType="TpUsers">
		SELECT * from tp_users where user_id = #{from_user_id}
	</select>
	<update id="addNumber">
	  update tp_users set paper_number_allowance = paper_number_allowance + #{number} where user_id = #{from_user_id}
	</update>
	<select id="selectToUsers" resultType="TpUsers">
		SELECT * from tp_users where user_id = #{user_id}
	</select>
	<update id="addNumberToUser">
		update tp_users set paper_number_allowance = paper_number_allowance + #{number} ,paper_number = paper_number + #{number} where user_id = #{user_id}
	</update>
	<select id="getLikeUser" resultType="TpUsers">
		SELECT * from tp_users where user_id = #{user_id}
	</select>
	<select id="selectInviteUser" resultType="TpUsers">
		select * from tp_users where invite_code = #{invite_code}
	</select>
</mapper>