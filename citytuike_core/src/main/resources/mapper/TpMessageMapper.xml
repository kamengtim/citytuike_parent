<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.citytuike.mapper.TpMessageMapper" >
  <resultMap id="BaseResultMap" type="com.citytuike.model.TpMessage" >
    <id column="message_id" property="message_id" jdbcType="INTEGER" />
    <result column="admin_id" property="admin_id" jdbcType="SMALLINT" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="send_time" property="send_time" jdbcType="INTEGER" />
    <result column="send_status" property="send_status" jdbcType="TINYINT" />
    <result column="error_msg" property="error_msg" jdbcType="VARCHAR" />
    <result column="error_num" property="error_num" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="LONGVARCHAR" />
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tp_message
    where message_id = #{message_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.citytuike.model.TpMessage" >
    insert into tp_message (message_id, admin_id, type,
      category, send_time, send_status,
      error_msg, error_num, create_time,
      message, data)
    values (#{message_id,jdbcType=INTEGER}, #{admin_id,jdbcType=SMALLINT}, #{type,jdbcType=BIT},
      #{category,jdbcType=INTEGER}, #{send_time,jdbcType=INTEGER}, #{send_status,jdbcType=TINYINT},
      #{error_msg,jdbcType=VARCHAR}, #{error_num,jdbcType=INTEGER}, #{create_time,jdbcType=INTEGER},
      #{message,jdbcType=LONGVARCHAR}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.citytuike.model.TpMessage" >
    update tp_message
    set admin_id = #{admin_id,jdbcType=SMALLINT},
      type = #{type,jdbcType=BIT},
      category = #{category,jdbcType=INTEGER},
      send_time = #{send_time,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR},
      data = #{data,jdbcType=LONGVARCHAR}
    where message_id = #{message_id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select message_id, admin_id, type, category, send_time, message, data
    from tp_message
    where message_id = #{message_id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select message_id, admin_id, type, category, send_time, message, data
    from tp_message
  </select>
  <select id="selectMessageByMessageId" resultMap="BaseResultMap" >
    select message_id, admin_id, type, category, send_time, message, data
    from tp_message where message_id = #{message_id}
  </select>
  <select id="selectCount" resultType="int" >
    select count(message_id)
    from tp_message where message_id = #{message_id}
  </select>
  <!-- 分页SQL语句 -->
  <select id="selectByPage" resultMap="BaseResultMap">
    SELECT m.category,m.message_id,um.status,m.send_time,m.type,m.data FROM tp_message m
                    INNER JOIN tp_user_message um ON (um.message_id=m.message_id AND um.user_id = #{user_id} )
                    WHERE m.type = 0 AND m.category = #{cate} AND m.data!=""
                    UNION (SELECT m.category,m.message_id, 1 AS status,m.send_time,m.type,m.data FROM tp_message m
                    WHERE m.type = 1 AND m.category = #{cate} AND m.data!="")
                    ORDER BY send_time DESC LIMIT  #{startPos},#{pageSize}
  </select>
    <select id="NewSelectMessageByMessageId" resultMap="BaseResultMap" >
        select message_id, admin_id, type, category, send_time, message, data
        from tp_message where message_id = #{message_id} and category = #{category}
    </select>
  <select id="selectMessage" resultMap="BaseResultMap">
SELECT m.category,m.message_id,um.status,m.send_time,m.type,m.data,m.message FROM tp_message m
                    INNER JOIN tp_user_message um ON (um.message_id=m.message_id AND um.user_id = #{user_id})
                    WHERE m.type = 0 AND m.category = #{category}
                    UNION (SELECT m.category,m.message_id, 1 AS status,m.send_time,m.type,m.data,m.message FROM tp_message m
										WHERE m.type = 1 AND m.category = #{category} )
                    ORDER BY send_time DESC LIMIT 1,10
  </select>
  <insert id="save" parameterType="com.citytuike.model.TpMessage">
    insert into tp_message (message_id, admin_id, type,
      category, send_time, send_status,
      error_msg, error_num, create_time,
      message, data)
    values (#{message_id,jdbcType=INTEGER}, #{admin_id,jdbcType=SMALLINT}, #{type,jdbcType=BIT},
      #{category,jdbcType=INTEGER}, #{send_time,jdbcType=INTEGER}, #{send_status,jdbcType=TINYINT},
      #{error_msg,jdbcType=VARCHAR}, #{error_num,jdbcType=INTEGER}, #{create_time,jdbcType=INTEGER},
      #{message,jdbcType=LONGVARCHAR}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <select id="getNewMessage" resultMap="BaseResultMap">
    SELECT * from tp_message where send_time = #{i}
  </select>
</mapper>